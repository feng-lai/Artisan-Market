<cart-drawer class="drawer{% if cart == empty %} is-empty{% endif %}">
  <div id="CartDrawer" class="cart-drawer">
    <div id="CartDrawer-Overlay" class="cart-drawer__overlay"></div>
    <div class="drawer__inner" role="dialog" aria-modal="true" aria-label="{{ 'sections.cart.title' | t }}" tabindex="-1">
      <div class="drawer__header">
        <h2 class="drawer__heading">{{ 'sections.cart.title' | t }}</h2>
        <button class="drawer__close" type="button" onclick="this.closest('cart-drawer').close()" aria-label="{{ 'accessibility.close' | t }}">
          <svg aria-hidden="true" focusable="false" class="icon icon-close" fill="none" viewBox="0 0 18 17">
            <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
          </svg>
        </button>
      </div>
      <cart-drawer-items class="drawer__contents js-contents">
        {%- if cart != empty -%}
          <div class="drawer__cart-items-wrapper">
            <table class="cart-items" role="table">
              <thead role="rowgroup">
                <tr role="row">
                  <th class="caption-with-letter-spacing" colspan="2" scope="col" role="columnheader">{{ 'sections.cart.headings.product' | t }}</th>
                  <th class="medium-hide large-up-hide right caption-with-letter-spacing" colspan="1" scope="col" role="columnheader">{{ 'sections.cart.headings.total' | t }}</th>
                  <th class="cart-items__heading--wide small-hide caption-with-letter-spacing" colspan="1" scope="col" role="columnheader">{{ 'sections.cart.headings.quantity' | t }}</th>
                  <th class="small-hide right caption-with-letter-spacing" colspan="1" scope="col" role="columnheader">{{ 'sections.cart.headings.total' | t }}</th>
                </tr>
              </thead>
              <tbody role="rowgroup">
                {%- for item in cart.items -%}
                  <tr class="cart-item" id="CartDrawer-Item-{{ item.index | plus: 1 }}" role="row">
                    <td class="cart-item__media" role="cell">
                      {% if item.image %}
                        <img class="cart-item__image" src="{{ item.image | image_url: width: 300 }}" alt="{{ item.image.alt | escape }}" loading="lazy" width="150" height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}">
                      {% endif %}
                    </td>
                    <td class="cart-item__details" role="cell">
                      {%- if settings.show_vendor -%}
                        <p class="caption-with-letter-spacing">{{ item.product.vendor }}</p>
                      {%- endif -%}
                      <a href="{{ item.url }}" class="cart-item__name h4 break">{{ item.product.title | escape }}</a>
                      {%- if item.original_price != item.final_price -%}
                        <div class="cart-item__discounted-prices">
                          <span class="visually-hidden">{{ 'products.product.price.regular_price' | t }}</span>
                          <s class="cart-item__old-price product-option">{{ item.original_price | money }}</s>
                          <span class="visually-hidden">{{ 'products.product.price.sale_price' | t }}</span>
                          <strong class="cart-item__final-price product-option">{{ item.final_price | money }}</strong>
                        </div>
                      {%- else -%}
                        <div class="product-option">{{ item.original_price | money }}</div>
                      {%- endif -%}
                      {%- if item.product.has_only_default_variant == false or item.properties.size != 0 or item.selling_plan_allocation != null -%}
                        <dl>
                          {%- if item.product.has_only_default_variant == false -%}
                            {%- for option in item.options_with_values -%}
                              <div class="product-option">
                                <dt>{{ option.name }}: </dt>
                                <dd>{{ option.value }}</dd>
                              </div>
                            {%- endfor -%}
                          {%- endif -%}
                        </dl>
                      {%- endif -%}
                    </td>
                    <td class="cart-item__totals right" role="cell">
                      <div class="loading-overlay hidden">
                        <div class="loading-overlay__spinner">
                          <svg aria-hidden="true" focusable="false" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                          </svg>
                        </div>
                      </div>
                      <div class="cart-item__price-wrapper">
                        {%- if item.original_line_price != item.final_line_price -%}
                          <dl class="cart-item__discounted-prices">
                            <dt class="visually-hidden">{{ 'products.product.price.regular_price' | t }}</dt>
                            <dd><s class="cart-item__old-price price price--end">{{ item.original_line_price | money }}</s></dd>
                            <dt class="visually-hidden">{{ 'products.product.price.sale_price' | t }}</dt>
                            <dd class="price price--end">{{ item.final_line_price | money }}</dd>
                          </dl>
                        {%- else -%}
                          <span class="price price--end">{{ item.original_line_price | money }}</span>
                        {%- endif -%}
                      </div>
                    </td>
                  </tr>
                {%- endfor -%}
              </tbody>
            </table>
          </div>
        {%- endif -%}
        <div class="drawer__footer">
          {%- if settings.show_cart_note -%}
            <details id="Details-CartDrawer-CartNote">
              <summary>
                <span class="summary__title">{{ 'sections.cart.note' | t }}</span>
                <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
                </svg>
              </summary>
              <cart-note class="cart__note field">
                <label class="visually-hidden" for="CartDrawer-Note">{{ 'sections.cart.note' | t }}</label>
                <textarea id="CartDrawer-Note" class="text-area text-area--resize-vertical field__input" name="note" placeholder="{{ 'sections.cart.note' | t }}">{{ cart.note }}</textarea>
              </cart-note>
            </details>
          {%- endif -%}
          <div class="cart-drawer__footer" id="CartDrawer-CartFooter">
            <div class="totals" role="status">
              <h2 class="totals__subtotal">{{ 'sections.cart.subtotal' | t }}</h2>
              <p class="totals__subtotal-value">{{ cart.total_price | money_with_currency }}</p>
            </div>
            <div class="cart__ctas" id="CartDrawer-CartFooter">
              <noscript>
                <button type="submit" class="cart__update-button button button--secondary" form="CartDrawer-Form">
                  {{ 'sections.cart.update' | t }}
                </button>
              </noscript>
              <button type="submit" id="CartDrawer-Checkout" class="cart__checkout-button button" name="commit" form="CartDrawer-Form" formaction="{{ routes.cart_url }}">
                {{ 'sections.cart.checkout' | t }}
              </button>
            </div>
          </div>
        </div>
      </cart-drawer-items>
    </div>
  </div>
</cart-drawer>

<script>
  class CartDrawer extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('keyup', (evt) => evt.code === 'Escape' && this.close());
      this.querySelector('#CartDrawer-Overlay').addEventListener('click', this.close.bind(this));
      this.setHeaderCartIconAccessibility();
    }

    setHeaderCartIconAccessibility() {
      const cartLink = document.querySelector('#cart-icon-bubble');
      cartLink.setAttribute('role', 'button');
      cartLink.setAttribute('aria-haspopup', 'dialog');
      cartLink.addEventListener('click', (event) => {
        event.preventDefault();
        this.open(cartLink)
      });
      cartLink.addEventListener('keydown', (event) => {
        if (event.code.toUpperCase() === 'SPACE') {
          event.preventDefault();
          this.open(cartLink);
        }
      });
    }

    open(triggeredBy) {
      if (triggeredBy) this.setActiveElement(triggeredBy);
      const cartDrawerNote = this.querySelector('[id^="Details-"] summary');
      if (cartDrawerNote && !cartDrawerNote.hasAttribute('role')) this.setSummaryAccessibility(cartDrawerNote);
      setTimeout(() => {trapFocus(this.querySelector('.drawer__inner'), this.querySelector('.drawer__close'))});
      document.body.classList.add('overflow-hidden');
    }

    close() {
      document.body.classList.remove('overflow-hidden');
      removeTrapFocus(this.activeElement);
    }

    setSummaryAccessibility(cartDrawerNote) {
      cartDrawerNote.setAttribute('role', 'button');
      cartDrawerNote.setAttribute('aria-expanded', 'false');
      if(cartDrawerNote.nextElementSibling.getAttribute('id')) {
        cartDrawerNote.setAttribute('aria-controls', cartDrawerNote.nextElementSibling.id);
      }
      cartDrawerNote.addEventListener('click', (event) => {
        event.currentTarget.setAttribute('aria-expanded', !event.currentTarget.closest('details').hasAttribute('open'));
      });
      cartDrawerNote.parentElement.addEventListener('keyup', onKeyUpEscape);
    }

    renderContents(parsedState) {
      this.querySelector('.js-contents').innerHTML = parsedState.sections[parsedState.sections.length - 1];
      this.querySelector('.js-contents').classList.remove('is-empty');
      if (parsedState.item_count === 0) this.querySelector('.js-contents').classList.add('is-empty');
      this.open();
    }

    getSectionsToRender() {
      return [
        {
          id: 'CartDrawer',
          section: 'cart-drawer',
          selector: '.js-contents',
        },
        {
          id: 'cart-icon-bubble',
          section: 'cart-icon-bubble',
          selector: '.shopify-section'
        }
      ];
    }

    getSectionInnerHTML(html, selector) {
      return new DOMParser()
        .parseFromString(html, 'text/html')
        .querySelector(selector).innerHTML;
    }

    setActiveElement(element) {
      this.activeElement = element;
    }
  }

  customElements.define('cart-drawer', CartDrawer);
</script>

<style>
  .drawer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .drawer.animate {
    visibility: visible;
    opacity: 1;
  }

  .cart-drawer {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .cart-drawer__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .drawer__inner {
    position: absolute;
    right: 0;
    top: 0;
    width: 40rem;
    max-width: 95vw;
    height: 100%;
    background-color: rgba(var(--color-base-background-1));
    transform: translateX(100%);
    transition: transform 0.3s ease;
    overflow-y: auto;
  }

  .drawer.animate .drawer__inner {
    transform: translateX(0);
  }

  .drawer__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem;
    border-bottom: 1px solid rgba(var(--color-base-text), 0.08);
  }

  .drawer__heading {
    margin: 0;
    font-size: 1.8rem;
  }

  .drawer__close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .drawer__contents {
    padding: 2rem;
  }

  .cart-items {
    width: 100%;
    border-collapse: collapse;
  }

  .cart-item {
    border-bottom: 1px solid rgba(var(--color-base-text), 0.08);
    padding: 1rem 0;
  }

  .cart-item__media {
    width: 8rem;
    padding-right: 1rem;
  }

  .cart-item__image {
    width: 100%;
    height: auto;
  }

  .cart-item__details {
    vertical-align: top;
  }

  .cart-item__name {
    margin: 0 0 0.5rem 0;
    font-size: 1.4rem;
  }

  .drawer__footer {
    padding: 2rem;
    border-top: 1px solid rgba(var(--color-base-text), 0.08);
  }

  .totals {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .totals__subtotal {
    margin: 0;
    font-size: 1.6rem;
  }

  .totals__subtotal-value {
    margin: 0;
    font-size: 1.6rem;
    font-weight: 600;
  }

  .cart__checkout-button {
    width: 100%;
    padding: 1.5rem;
    background-color: rgba(var(--color-base-accent-1));
    color: rgba(var(--color-base-solid-button-labels));
    border: none;
    font-size: 1.4rem;
    font-weight: 600;
    text-transform: uppercase;
    cursor: pointer;
  }
</style>
