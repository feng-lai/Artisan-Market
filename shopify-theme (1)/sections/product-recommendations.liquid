{%- if recommendations.products_count > 0 -%}
  <div class="product-recommendations page-width section-padding">
    <h2>{{ 'sections.product-recommendations.heading' | t }}</h2>
    <ul class="grid grid--2-col grid--3-col-tablet grid--4-col-desktop" role="list">
      {%- for recommendation in recommendations.products -%}
        <li class="grid__item">
          {% render 'card-product', card_product: recommendation %}
        </li>
      {%- endfor -%}
    </ul>
  </div>
{%- endif -%}

<script>
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;
    observer.unobserve(productRecommendationsSection);

    fetch(productRecommendationsSection.dataset.url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
</script>

{% schema %}
{
  "name": "Product recommendations",
  "settings": [
    {
      "type": "paragraph",
      "content": "Dynamic recommendations change and improve with time. [Learn more](https://help.shopify.com/en/themes/development/recommended-products)"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "Heading"
    }
  ]
}
{% endschema %}
